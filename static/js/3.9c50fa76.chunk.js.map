{"version":3,"sources":["componenents/Profile/ProfileInfo/ProfileInfo.module.css","componenents/Profile/MyPosts/MyPosts.module.css","componenents/Profile/MyPosts/Post/Post.module.css","componenents/Profile/MyPosts/Post/Post.jsx","componenents/Profile/MyPosts/MyPosts.jsx","componenents/Profile/MyPosts/MyPostsContainer.jsx","componenents/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","componenents/Profile/ProfileInfo/ProfileInfo.jsx","componenents/Profile/Profile.jsx","componenents/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","message","likesCount","maxLength10","maxLengthCreator","MyPost","React","memo","postsElements","posts","map","el","id","postsBlock","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","textArea","name","placeholder","validate","required","MyPostContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","ProfileInfo","profile","descriptionBlock","photos","large","aboutMe","lookingForAJobDescription","Preloader","Profile","ProfileContainer","userId","this","match","params","authUserId","history","push","getUsersProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.9c50fa76.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__tBAaf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2kk3q\",\"posts\":\"MyPosts_posts__2Pi-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__316iB\"};","import s from \"./Post.module.css\";\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://w7.pngwing.com/pngs/340/946/png-transparent-avatar-user-computer-icons-software-developer-avatar-child-face-heroes.png\" />\r\n      {props.message}\r\n      <div>\r\n        <span>like:{props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Post;\r\n ","import React, { Component, PureComponent } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { textArea } from \"../../common/FormControls/FormControls\";\r\nimport {\r\n  required,\r\n  maxLengthCreator,\r\n} from \"./../../../utils/validators/validators\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\nconst MyPost = React.memo((props) => {\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state;\r\n  // }\r\n  let postsElements = props.posts.map((el) => (\r\n    <Post message={el.message} likesCount={el.likesCount} key={el.id} />\r\n  ));\r\n\r\n  let onSubmitPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.postsBlock}>\r\n      <h3>My post</h3>\r\n      <AddPostFormRedux onSubmit={onSubmitPost} />\r\n      <div className={s.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={textArea}\r\n          name=\"newPostText\"\r\n          placeholder=\"Enter your post text\"\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <button>Add post</button>\r\n    </form>\r\n  );\r\n};\r\nconst AddPostFormRedux = reduxForm({ form: \"postAddTextForm\" })(AddPostForm);\r\nexport default MyPost;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addPostActionCreator\r\n} from \"../../../redux/profile-reducer\";\r\nimport MyPost from \"./MyPosts\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\nconst MyPostContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost);\r\nexport default MyPostContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n            onChange={onStatusChange}\r\n          ></input>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/Preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} />\r\n        <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n        <div>{props.profile.aboutMe}</div>\r\n        <div>{props.profile.lookingForAJobDescription}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ProfileInfo;\r\n","import MyPostContainer from \"./MyPosts/MyPostsContainer\";\r\nimport s from \"./Profile.module.css\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostContainer />\r\n    </div>\r\n  );\r\n};\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getUsersProfile,\r\n  getStatus,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUsersProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n  render() {\r\n    return (\r\n      <Profile\r\n        {...this.props}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUsersProfile, getStatus, updateStatus }),\r\n  withRouter\r\n  // withAuthRedirect\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}