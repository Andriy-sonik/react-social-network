{"version":3,"sources":["componenents/Dialogs/Dialogs.module.css","componenents/Dialogs/DialogsItem/DialogsItem.module.css","componenents/Dialogs/Message/Message.module.css","componenents/Dialogs/DialogsItem/DialogsItem.jsx","componenents/Dialogs/Message/Message.jsx","componenents/Dialogs/Dialogs.jsx","componenents/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogsItem","props","className","s","dialog","active","to","id","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormReduc","reduxForm","form","onSubmit","handleSubmit","Field","component","textArea","validate","required","placeholder","Dialogs","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","addMessage","newMessageText","compose","connect","state","dispatch","addMessageActionCreator","withAuthRedirect"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,gC,oBCApED,EAAOC,QAAU,CAAC,OAAS,4BAA4B,OAAS,8B,oBCAhED,EAAOC,QAAU,CAAC,SAAW,0BAA0B,QAAU,2B,yICQlDC,EAPK,SAACC,GACnB,OACE,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACE,cAAC,IAAD,CAASC,GAAE,mBAAcL,EAAMM,IAA/B,SAAsCN,EAAMO,U,kBCDnCC,EAHC,SAACR,GACf,OAAO,qBAAKC,UAAWC,IAAEO,QAAlB,SAA4BT,EAAMS,W,gBCMrCC,EAAeC,YAAiB,KAoChCC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAACb,GACtB,OACE,uBAAMe,SAAUf,EAAMgB,aAAtB,UACE,cAACC,EAAA,EAAD,CACEC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,uBAEd,uDAQSC,EArCC,SAACvB,GACf,IAAIwB,EAAkBxB,EAAMyB,YAAYC,QAAQC,KAAI,SAACC,GAAD,OAClD,cAAC,EAAD,CAAarB,KAAMqB,EAAErB,KAAMD,GAAIsB,EAAEtB,IAASsB,EAAEtB,OAE1CuB,EAAmB7B,EAAMyB,YAAYK,SAASH,KAAI,SAACI,GAAD,OACpD,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAEzB,OAOtC,OACE,sBAAKL,UAAWC,IAAEwB,QAAlB,UACE,qBAAKzB,UAAWC,IAAE8B,aAAlB,SAAiCR,IACjC,qBAAKvB,UAAWC,IAAE4B,SAAlB,SAA6BD,IAC7B,cAACjB,EAAD,CAAqBG,SARL,SAACkB,GACnBjC,EAAMkC,WAAWD,EAAOE,uB,iBCEbC,sBACbC,aAdoB,SAACC,GACrB,MAAO,CACLb,YAAaa,EAAMb,gBAGE,SAACc,GACxB,MAAO,CACLL,WAAY,SAACC,GACXI,EAASC,YAAwBL,SAOrCM,IAFaL,CAGbb","file":"static/js/4.5cb3e3fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__stTFT\",\"dialogsItems\":\"Dialogs_dialogsItems__3I1A3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogsItem_dialog__2Q6B1\",\"active\":\"DialogsItem_active__2k2q5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__Zw6lA\",\"message\":\"Message_message__2zOSL\"};","import { NavLink } from \"react-router-dom\";\r\nimport s from \"./DialogsItem.module.css\";\r\nconst DialogsItem = (props) => {\r\n  return (\r\n    <div className={s.dialog + \" \" + s.active}>\r\n      <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\nexport default DialogsItem;\r\n","import s from \"./Message.module.css\";\r\nconst Message = (props) => {\r\n  return <div className={s.message}>{props.message}</div>;\r\n};\r\nexport default Message;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { textArea } from \"../common/FormControls/FormControls\";\r\nimport { required, maxLengthCreator } from \"../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = (props) => {\r\n  let dialogsElements = props.dialogsPage.dialogs.map((d) => (\r\n    <DialogsItem name={d.name} id={d.id} key={d.id} />\r\n  ));\r\n  let messagesElements = props.dialogsPage.messages.map((m) => (\r\n    <Message message={m.message} key={m.id} />\r\n  ));\r\n\r\n  let addNewMessage = (values) => {\r\n    props.addMessage(values.newMessageText);\r\n  };\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>{dialogsElements}</div>\r\n      <div className={s.messages}>{messagesElements}</div>\r\n      <AddMessageFormReduc onSubmit={addNewMessage} />\r\n    </div>\r\n  );\r\n};\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field\r\n        component={textArea}\r\n        validate={[required, maxLength100]}\r\n        name=\"newMessageText\"\r\n        placeholder=\"Enter your message\"\r\n      />\r\n      <button>Add message</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst AddMessageFormReduc = reduxForm({ form: \"dialogAddMessageForm\" })(\r\n  AddMessageForm\r\n);\r\nexport default Dialogs;\r\n","import { connect } from \"react-redux\";\r\nimport {\r\n  addMessageActionCreator,\r\n} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage,\r\n  };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addMessage: (newMessageText) => {\r\n      dispatch(addMessageActionCreator(newMessageText));\r\n    },\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}